{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\University\\\\FYP\\\\BusX\\\\Student\\\\Screens\\\\AppNavigation.js\";\n{}\nimport base64 from 'react-native-base64';\nimport React, { useState, useEffect, createContext, useContext, Buffer } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StudentContext } from \"../ContextApi\";\nimport { NavigationContainer, DrawerActions, NavigationActions } from '@react-navigation/native';\nimport { DashboardScreen } from \"./DashboardScreen\";\nimport { LoginScreen } from \"./LoginScreen\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { AccountSetting } from \"./AcountSetting\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { CustomDrawer } from \"../assets/CustomDrawer\";\nimport { FeedbackNav } from \"./FeedbackNav\";\nimport { AntDesign, MaterialIcons, Octicons } from '@expo/vector-icons';\nimport { ComplaintsNav } from \"./ComplaintsNav\";\nimport { Route } from \"./Route\";\nimport { Attendence } from \"./Attendence\";\nimport { SetNearby } from \"./SetNearby\";\nimport { Stops } from \"./Stops\";\nimport { FeeStatus } from \"./FeeStatus\";\nimport { TrackBus } from \"./TrackBus\";\nimport { ScanQR } from \"./ScanQR\";\n\nfunction DashboardNav(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var student = useContext(StudentContext);\n  var base64Image = base64.decode(student.photo);\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerTitleAlign: \"center\",\n      headerLeft: function headerLeft() {\n        return React.createElement(TouchableOpacity, {\n          style: {\n            borderWidth: 1,\n            borderColor: \"#696E74\",\n            marginLeft: 10,\n            borderRadius: 30,\n            elevation: 6,\n            marginTop: 3\n          },\n          onPress: function onPress() {\n            return navigation.openDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          style: {\n            width: 100,\n            height: 50\n          },\n          source: {\n            uri: \"data:\" + student.photoType + \";charset=utf8;base64,\" + base64Image\n          },\n          style: {\n            height: 50,\n            width: 50,\n            borderWidth: 1,\n            borderRadius: 30\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }\n        }));\n      }\n    },\n    initialRouteName: student.route === null ? \"Route\" : \"Dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      headerStyle: {\n        backgroundColor: '#FfC329',\n        elevation: 0\n      }\n    },\n    name: \"Dashboard\",\n    component: DashboardScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerStyle: {\n        backgroundColor: '#FfC329',\n        elevation: 0\n      }\n    },\n    name: \"Route\",\n    component: Route,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerStyle: {\n        backgroundColor: '#FfC329',\n        elevation: 0\n      }\n    },\n    name: \"Attendence\",\n    component: Attendence,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerStyle: {\n        backgroundColor: '#FfC329',\n        elevation: 0\n      }\n    },\n    name: \"SetNearby\",\n    component: SetNearby,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerStyle: {\n        backgroundColor: '#FfC329',\n        elevation: 0\n      }\n    },\n    name: \"Stops\",\n    component: Stops,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerStyle: {\n        backgroundColor: '#FfC329',\n        elevation: 0\n      }\n    },\n    name: \"FeeStatus\",\n    component: FeeStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerStyle: {\n        backgroundColor: '#FfC329',\n        elevation: 0\n      }\n    },\n    name: \"Track\",\n    component: TrackBus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      headerStyle: {\n        backgroundColor: '#FfC329',\n        elevation: 0\n      }\n    },\n    name: \"ScanQR\",\n    component: ScanQR,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\n\nfunction AppNavigation(_ref2) {\n  var _this2 = this;\n\n  var route = _ref2.route,\n      navigation = _ref2.navigation;\n\n  var _useState = useState(route.params.data),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var signOut = function signOut() {\n    navigation.navigate(\"Login\");\n  };\n\n  return React.createElement(StudentContext.Provider, {\n    value: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, React.createElement(Drawer.Navigator, {\n    initialRouteName: \"DashboardNav\",\n    drawerContentOptions: {\n      activeTintColor: '#FfC329',\n      itemStyle: {\n        marginVertical: 5\n      }\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawer, _extends({\n        signOut: signOut\n      }, props, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Dashboard\",\n    options: {\n      drawerIcon: function drawerIcon() {\n        return React.createElement(MaterialIcons, {\n          name: \"dashboard\",\n          size: 22,\n          color: '#293038',\n          style: {\n            marginRight: -25\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    component: DashboardNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Acount Settings\",\n    options: {\n      drawerIcon: function drawerIcon() {\n        return React.createElement(AntDesign, {\n          name: \"setting\",\n          size: 22,\n          color: '#293038',\n          style: {\n            marginRight: -25\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    component: AccountSetting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Feedback\",\n    options: {\n      drawerIcon: function drawerIcon() {\n        return React.createElement(MaterialIcons, {\n          name: \"feedback\",\n          size: 22,\n          color: '#293038',\n          style: {\n            marginRight: -25,\n            marginTop: 5\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }\n        });\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(TouchableOpacity, {\n          style: {\n            borderWidth: 1,\n            borderColor: \"#696E74\",\n            marginLeft: 10,\n            borderRadius: 30,\n            elevation: 6,\n            marginTop: 3\n          },\n          onPress: function onPress() {\n            return navigation.openDrawer();\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          style: {\n            width: 100,\n            height: 50\n          },\n          source: {\n            uri: \"data:\" + student.photoType + \";charset=utf8;base64,\" + base64Image\n          },\n          style: {\n            height: 50,\n            width: 50,\n            borderWidth: 1,\n            borderRadius: 30\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }\n        }));\n      }\n    },\n    component: FeedbackNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Complaints\",\n    options: {\n      drawerIcon: function drawerIcon() {\n        return React.createElement(Octicons, {\n          name: \"issue-opened\",\n          size: 22,\n          color: '#293038',\n          style: {\n            marginRight: -25\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    component: ComplaintsNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport { AppNavigation, StudentContext };","map":{"version":3,"sources":["D:/University/FYP/BusX/Student/Screens/AppNavigation.js"],"names":["base64","React","useState","useEffect","createContext","useContext","Buffer","createStackNavigator","StudentContext","NavigationContainer","DrawerActions","NavigationActions","DashboardScreen","LoginScreen","createDrawerNavigator","AccountSetting","AsyncStorage","CustomDrawer","FeedbackNav","AntDesign","MaterialIcons","Octicons","ComplaintsNav","Route","Attendence","SetNearby","Stops","FeeStatus","TrackBus","ScanQR","DashboardNav","navigation","route","student","base64Image","decode","photo","headerTitleAlign","headerLeft","borderWidth","borderColor","marginLeft","borderRadius","elevation","marginTop","openDrawer","width","height","uri","photoType","headerStyle","backgroundColor","Stack","Drawer","AppNavigation","params","data","setData","signOut","navigate","activeTintColor","itemStyle","marginVertical","props","drawerIcon","marginRight"],"mappings":"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","sourcesContent":["{/*\r\n  const base64Image = student.photo.toString(); \r\n  <Image style={{width: 100, height: 50}} source={{uri:`data:${student.photoType};charset=utf8;base64,${Buffer.from(student.photo).toString('ascii')}`}}/>\r\n    */}\r\nimport base64 from 'react-native-base64';\r\nimport React, { useState, useEffect,createContext,useContext,Buffer} from \"react\";\r\nimport { StyleSheet, Text,Image, View,Button,TouchableOpacity} from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport{StudentContext} from \"../ContextApi\";\r\nimport { NavigationContainer,DrawerActions,NavigationActions } from '@react-navigation/native';\r\nimport {DashboardScreen} from \"./DashboardScreen\";\r\nimport {LoginScreen} from \"./LoginScreen\";\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport {AccountSetting} from './AcountSetting';\r\nimport { AsyncStorage } from 'react-native';\r\nimport{CustomDrawer} from '../assets/CustomDrawer';\r\nimport{FeedbackNav} from './FeedbackNav';\r\nimport { AntDesign,MaterialIcons,Octicons   } from '@expo/vector-icons';\r\nimport { ComplaintsNav } from \"./ComplaintsNav\";\r\nimport { Route } from \"./Route\";\r\nimport { Attendence } from './Attendence';\r\nimport { SetNearby } from './SetNearby';\r\nimport {Stops} from './Stops';\r\nimport { FeeStatus } from './FeeStatus';\r\nimport { TrackBus } from './TrackBus';\r\nimport { ScanQR } from './ScanQR';\r\nfunction DashboardNav({navigation,route}) {\r\n  const student=useContext(StudentContext);\r\n  const base64Image = base64.decode((student.photo));\r\n    return (\r\n        <Stack.Navigator  \r\n        screenOptions={{ \r\n          headerTitleAlign:\"center\",\r\n          headerLeft:()=>( \r\n            <TouchableOpacity style={{borderWidth:1,borderColor:\"#696E74\",marginLeft:10,borderRadius:30,elevation:6,marginTop:3}}onPress={() => navigation.openDrawer()}  >\r\n            <Image style={{width: 100, height: 50}} source={{uri:`data:${student.photoType};charset=utf8;base64,${base64Image}`}} \r\n            style={{height:50,width:50,borderWidth:1,borderRadius:30}}/>\r\n          \r\n        </TouchableOpacity>)\r\n         }}\r\n        initialRouteName={student.route===null?\"Route\":\"Dashboard\"}>\r\n          <Stack.Screen  options={{   \r\n        headerStyle: {\r\n          backgroundColor: '#FfC329',elevation:0\r\n        }\r\n        }} name=\"Dashboard\" component={DashboardScreen} />\r\n        <Stack.Screen  options={{   \r\n        headerStyle: {\r\n          backgroundColor: '#FfC329',elevation:0\r\n        }\r\n        }} name=\"Route\" component={Route} />\r\n        <Stack.Screen  options={{   \r\n        headerStyle: {\r\n          backgroundColor: '#FfC329',elevation:0\r\n        },\r\n        }} name=\"Attendence\" component={Attendence} />\r\n        <Stack.Screen  options={{   \r\n        headerStyle: {\r\n          backgroundColor: '#FfC329',elevation:0\r\n        },\r\n        }} name=\"SetNearby\" component={SetNearby} />\r\n        <Stack.Screen  options={{   \r\n        headerStyle: {\r\n          backgroundColor: '#FfC329',elevation:0\r\n        },\r\n        }} name=\"Stops\" component={Stops} />\r\n         <Stack.Screen  options={{   \r\n        headerStyle: {\r\n          backgroundColor: '#FfC329',elevation:0\r\n        },\r\n        }} name=\"FeeStatus\" component={FeeStatus} />\r\n        <Stack.Screen  options={{   \r\n        headerStyle: {\r\n          backgroundColor: '#FfC329',elevation:0\r\n        },\r\n        }} name=\"Track\" component={TrackBus} />\r\n        <Stack.Screen  options={{   \r\n        headerStyle: {\r\n          backgroundColor: '#FfC329',elevation:0\r\n        },\r\n        }} name=\"ScanQR\" component={ScanQR} />\r\n        </Stack.Navigator>\r\n   \r\n    );\r\n  }\r\n\r\nconst Stack = createStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\n\r\n\r\nfunction AppNavigation({route,navigation}) {\r\n    const [data,setData]=useState(route.params.data);\r\n    const signOut=()=>{\r\n      navigation.navigate(\"Login\");\r\n    };\r\n  return (\r\n      <StudentContext.Provider value={data}>\r\n      <Drawer.Navigator  initialRouteName=\"DashboardNav\"\r\n      drawerContentOptions={{\r\n        activeTintColor: '#FfC329',\r\n        itemStyle: {marginVertical: 5},\r\n        \r\n      }}\r\n      drawerContent={(props) => <CustomDrawer signOut={signOut}  {...props} />}>\r\n        <Drawer.Screen \r\n        name=\"Dashboard\"\r\n        options={{\r\n          drawerIcon: () => (\r\n            <MaterialIcons name=\"dashboard\" size={22} color={'#293038'} style={{marginRight:-25}} />\r\n          ),\r\n\r\n       }} \r\n        component={DashboardNav} />\r\n        <Drawer.Screen \r\n        name=\"Acount Settings\" \r\n        options={{\r\n          drawerIcon: () => (\r\n            <AntDesign name=\"setting\" size={22} color={'#293038'} style={{marginRight:-25}} />\r\n          ),\r\n       }}\r\n        component={AccountSetting} />\r\n        <Drawer.Screen \r\n        name=\"Feedback\" \r\n        options={{\r\n          drawerIcon: () => (\r\n            <MaterialIcons name=\"feedback\" size={22} color={'#293038'} style={{marginRight:-25,marginTop:5}} />\r\n          ),\r\n          headerLeft:()=>( \r\n            <TouchableOpacity style={{borderWidth:1,borderColor:\"#696E74\",marginLeft:10,borderRadius:30,elevation:6,marginTop:3}}onPress={() => navigation.openDrawer()}  >\r\n            <Image style={{width: 100, height: 50}} source={{uri:`data:${student.photoType};charset=utf8;base64,${base64Image}`}} \r\n            style={{height:50,width:50,borderWidth:1,borderRadius:30}}/>\r\n          \r\n        </TouchableOpacity>)\r\n       }}\r\n        component={FeedbackNav} />\r\n        <Drawer.Screen \r\n        name=\"Complaints\" \r\n        options={{\r\n          drawerIcon: () => (\r\n            <Octicons name=\"issue-opened\" size={22} color={'#293038'} style={{marginRight:-25}} />\r\n          ),\r\n       }}\r\n        component={ComplaintsNav} />\r\n      </Drawer.Navigator>\r\n      </StudentContext.Provider>\r\n  );\r\n}\r\nexport{AppNavigation,StudentContext};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}