{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\University\\\\FYP\\\\BusX\\\\Student\\\\Screens\\\\ScanQR.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { StudentContext } from \"../ContextApi\";\nimport { Ionicons, FontAwesome, AntDesign } from '@expo/vector-icons';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nexport function ScanQR(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var Sdata = useContext(StudentContext);\n\n  var _useState = useState(Sdata),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      hasPermission = _useState4[0],\n      setHasPermission = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      scanned = _useState6[0],\n      setScanned = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalVisible = _useState8[0],\n      setModalVisible = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalText = _useState10[0],\n      setModalText = _useState10[1];\n\n  useEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 9\n          }\n        }, React.createElement(Ionicons, {\n          style: {\n            marginRight: 10,\n            marginTop: 5\n          },\n          name: \"arrow-back\",\n          size: 28,\n          color: \"black\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 5\n          }\n        }));\n      }\n    });\n\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status === 'granted');\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref2) {\n    var type = _ref2.type,\n        data = _ref2.data;\n    setModalText(\"QR code with type \" + type + \" and data \" + data + \" has been scanned!\");\n    setModalVisible(true);\n    setScanned(true);\n  };\n\n  if (hasPermission === null) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 12\n      }\n    }, \"Requesting for camera permission\");\n  }\n\n  if (hasPermission === false) {\n    return React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }, \"No access to camera\");\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, modalText), React.createElement(TouchableOpacity, {\n    style: styles.SButton,\n    onPress: function onPress() {\n      setModalVisible(false);\n      navigation.navigate(\"Dashboard\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.ButtonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"OK\"))))), React.createElement(BarCodeScanner, {\n    onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n    style: [StyleSheet.absoluteFill, {\n      width: \"90%\",\n      height: \"60%\",\n      marginLeft: \"5%\",\n      marginTop: 20\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Capture the QR Code\"), React.createElement(AntDesign, {\n    name: \"qrcode\",\n    style: {\n      alignSelf: \"center\",\n      marginTop: 20\n    },\n    size: 74,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FfC329\"\n  },\n  text: {\n    textAlign: 'center',\n    color: \"#293038\",\n    fontSize: 30,\n    marginTop: \"135%\"\n  },\n  modalView: {\n    width: \"95%\",\n    alignSelf: \"center\",\n    marginTop: \"80%\",\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: \"#FfC329\",\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#FfC329\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  SButton: {\n    alignItems: \"center\",\n    marginTop: 10,\n    backgroundColor: \"#293038\",\n    width: 100,\n    height: 30,\n    borderRadius: 6,\n    paddingTop: \"1.5%\"\n  },\n  ButtonText: {\n    color: \"#FfC329\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  modalText: {\n    textAlign: 'center',\n    color: \"#293038\",\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["D:/University/FYP/BusX/Student/Screens/ScanQR.js"],"names":["React","useState","useEffect","useContext","StudentContext","Ionicons","FontAwesome","AntDesign","BarCodeScanner","ScanQR","navigation","route","Sdata","data","setData","hasPermission","setHasPermission","scanned","setScanned","modalVisible","setModalVisible","modalText","setModalText","setOptions","headerRight","goBack","marginRight","marginTop","requestPermissionsAsync","status","handleBarCodeScanned","type","styles","container","modalView","SButton","navigate","ButtonText","undefined","StyleSheet","absoluteFill","width","height","marginLeft","text","alignSelf","create","flex","backgroundColor","textAlign","color","fontSize","borderRadius","borderWidth","borderColor","padding","alignItems","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","paddingTop","fontWeight","textTransform"],"mappings":"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","sourcesContent":["import React, { useState, useEffect,useContext,} from \"react\";\r\nimport { StyleSheet, Text,Image, View,Button,TouchableOpacity,Switch,ActivityIndicator,Modal} from 'react-native';\r\nimport{StudentContext} from \"../ContextApi\";\r\nimport { Ionicons,FontAwesome,AntDesign   } from '@expo/vector-icons';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nexport function ScanQR({ navigation,route }) {\r\nconst Sdata=useContext(StudentContext);\r\nconst[data,setData]=useState(Sdata);\r\nconst [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\nconst [modalText, setModalText] = useState();\r\n\r\n  useEffect(() => {\r\n    navigation.setOptions({ headerRight:()=>( \r\n        <TouchableOpacity onPress={()=>navigation.goBack()}  >        \r\n    <Ionicons style={{marginRight:10,marginTop:5}}name=\"arrow-back\" size={28} color=\"black\" />\r\n    </TouchableOpacity>) });\r\n\r\n    (async () => {\r\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    })();\r\n  }, []);\r\n\r\n  const handleBarCodeScanned = ({ type, data }) => {\r\n    setModalText(`QR code with type ${type} and data ${data} has been scanned!`);\r\n    setModalVisible(true);\r\n    setScanned(true);\r\n  };\r\n\r\n  if (hasPermission === null) {\r\n    return <Text>Requesting for camera permission</Text>;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <Text>No access to camera</Text>;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n    <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n      >\r\n        <View>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalText}>{modalText}</Text>\r\n            <TouchableOpacity  style={styles.SButton} onPress={()=>{\r\n            setModalVisible(false);\r\n            navigation.navigate(\"Dashboard\")}}>\r\n        <Text style={styles.ButtonText} >OK</Text>\r\n        </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n      \r\n      <BarCodeScanner\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n        style={[StyleSheet.absoluteFill,{width:\"90%\",height:\"60%\",marginLeft:\"5%\",marginTop:20}]}\r\n      />  \r\n      <Text style={styles.text}>Capture the QR Code</Text> \r\n      <AntDesign name=\"qrcode\" style ={{alignSelf:\"center\",marginTop:20}} size={74} color=\"black\" />     \r\n    </View>\r\n  );\r\n}\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor:\"#FfC329\"\r\n    },\r\n    text:{\r\n        textAlign: 'center',\r\n        color:\"#293038\",\r\n        fontSize:30,\r\n        marginTop:\"135%\"\r\n      },\r\n      modalView: {\r\n        width:\"95%\",\r\n        alignSelf:\"center\",\r\n        marginTop: \"80%\",\r\n        backgroundColor: \"white\",\r\n        borderRadius: 20,\r\n        borderWidth:1,\r\n        borderColor:\"#FfC329\",\r\n        padding: 35,\r\n        alignItems: \"center\",\r\n        shadowColor: \"#FfC329\",\r\n        shadowOffset: {\r\n          width: 0,\r\n          height: 2\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5\r\n      },\r\n      SButton:{\r\n        alignItems: \"center\",\r\n        marginTop:10,\r\n        backgroundColor:\"#293038\",\r\n        width:100,\r\n        height:30,\r\n        borderRadius:6,\r\n        paddingTop:\"1.5%\",\r\n      \r\n      },\r\n      ButtonText:{\r\n        color: \"#FfC329\",\r\n        fontWeight: \"bold\",\r\n        alignSelf: \"center\",\r\n        textTransform: \"uppercase\"\r\n      },\r\n      modalText:{\r\n        textAlign: 'center',\r\n      color:\"#293038\",\r\n      fontSize:20\r\n      },\r\n    \r\n  });"]},"metadata":{},"sourceType":"module"}