{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\University\\\\FYP\\\\BusX\\\\Student\\\\Screens\\\\LoginScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Form } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport variable from \"../localhost\";\nexport function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      data = _useState6[0],\n      setData = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var handleSubmit = function handleSubmit() {\n    setLoading(true);\n    console.log(\"ip is : \" + variable.localhost);\n    fetch(\"http://\" + variable.localhost + \":5000/student/login\", {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (error) {\n      return console.error(\"Error: \", error);\n    }).then(function (response) {\n      if (response.message) {\n        setLoading(false);\n        setError(response.message);\n      }\n\n      if (response.token) {\n        setError(null);\n        setEmail(\"\");\n        setPassword(\"\");\n        setLoading(false);\n        navigation.navigate(\"AppNav\", {\n          data: response.result\n        });\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"../assets/LogoTransparent.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.Heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"STUDENT\"), React.createElement(View, {\n    style: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.inputFields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialIcons, {\n    name: \"email\",\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    placeholder: \"Email\",\n    placeholderTextColor: \"#293038\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      setEmail(text);\n      setError(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.inputFields,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"key\",\n    size: 24,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.TextInput,\n    secureTextEntry: true,\n    placeholder: \"Password\",\n    placeholderTextColor: \"#293038\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      setPassword(text);\n      setError(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }\n  })), error == null ? null : React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 27\n    }\n  }, error), React.createElement(Text, {\n    style: styles.fPass,\n    onPress: function onPress() {\n      navigation.navigate(\"forgetPassword\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Forgot your Password? \"), React.createElement(TouchableOpacity, {\n    type: \"submit\",\n    style: styles.SButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, loading ? React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"small\",\n    color: \"#FfC329\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 22\n    }\n  })) : React.createElement(Text, {\n    style: styles.ButtonText,\n    onPress: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 80\n    }\n  }, \"Sign In\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    paddingTop: \"10%\"\n  },\n  Heading: {\n    textAlign: 'center',\n    fontWeight: \"bold\",\n    color: \"#293038\",\n    fontSize: 20,\n    fontFamily: 'Roboto'\n  },\n  form: {\n    marginTop: \"20%\",\n    justifyContent: \"center\",\n    backgroundColor: \"#FfC329\",\n    paddingBottom: 20,\n    borderRadius: 10,\n    elevation: 20,\n    opacity: 0.9\n  },\n  inputFields: {\n    borderBottomColor: \"#293038\",\n    borderRadius: 10,\n    borderBottomWidth: 1,\n    height: 40,\n    width: 300,\n    margin: 12,\n    paddingLeft: 10,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  TextInput: {\n    marginLeft: 10,\n    width: 300\n  },\n  SButton: {\n    alignItems: \"center\",\n    marginTop: 30,\n    backgroundColor: \"#293038\",\n    width: 100,\n    height: 30,\n    borderRadius: 6,\n    paddingTop: \"1.5%\",\n    alignSelf: \"center\"\n  },\n  ButtonText: {\n    color: \"#FfC329\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  image: {\n    marginTop: \"20%\",\n    width: 200,\n    height: 200,\n    shadowColor: \"yellow\",\n    shadowOffset: {\n      height: 2\n    },\n    shadowOpacity: 0.3\n  },\n  fPass: {\n    color: \"#293038\",\n    textAlign: 'right',\n    fontSize: 13,\n    fontWeight: \"bold\",\n    marginRight: 13\n  },\n  error: {\n    color: \"red\",\n    textAlign: 'left',\n    fontSize: 12,\n    fontWeight: \"bold\",\n    marginLeft: 20\n  }\n});","map":{"version":3,"sources":["D:/University/FYP/BusX/Student/Screens/LoginScreen.js"],"names":["React","useState","useEffect","Form","MaterialIcons","MaterialCommunityIcons","variable","LoginScreen","navigation","email","setEmail","password","setPassword","data","setData","error","setError","loading","setLoading","handleSubmit","console","log","localhost","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","message","token","navigate","result","styles","container","image","require","Heading","form","inputFields","TextInput","text","fPass","SButton","ButtonText","StyleSheet","create","flex","backgroundColor","alignItems","paddingTop","textAlign","fontWeight","color","fontSize","fontFamily","marginTop","justifyContent","paddingBottom","borderRadius","elevation","opacity","borderBottomColor","borderBottomWidth","height","width","margin","paddingLeft","flexDirection","marginLeft","alignSelf","textTransform","shadowColor","shadowOffset","shadowOpacity","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View,Button,FlatList ,ActivityIndicator,Form,TextInput,TouchableOpacity,Image} from 'react-native';\r\nimport { MaterialIcons,MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport variable from \"../localhost\";\r\n\r\n\r\nexport function LoginScreen({ navigation }) {\r\nconst [email,setEmail]=useState(\"\");\r\nconst [password,setPassword]=useState(\"\");\r\nconst [data,setData]=useState({});\r\nconst[error,setError]=useState(null);\r\nconst[loading,setLoading]=useState(false);\r\n\r\n\r\n  const handleSubmit=()=>{\r\n    setLoading(true);\r\n    console.log(\"ip is : \"+variable.localhost)\r\n    fetch(`http://${variable.localhost}:5000/student/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email:email,password:password})\r\n  })\r\n  .then(response => response.json())  \r\n  .catch(error=> console.error(\"Error: \",error))\r\n  .then(response=>{\r\n      if(response.message){\r\n        setLoading(false);\r\n        setError(response.message);\r\n      }\r\n      if(response.token){\r\n        setError(null);\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setLoading(false);\r\n        navigation.navigate(\"AppNav\",{data:response.result});\r\n      }\r\n      \r\n  })\r\n  };\r\n    return (\r\n      <View style={styles.container}>\r\n        <Image style={styles.image} source={require('../assets/LogoTransparent.png')}/>\r\n        <Text style={styles.Heading}>STUDENT</Text>\r\n        <View style={styles.form}>\r\n        <View style={styles.inputFields}>\r\n          <MaterialIcons name=\"email\" size={24} color=\"black\" />\r\n          <TextInput\r\n          style={styles.TextInput}\r\n          placeholder=\"Email\"\r\n          placeholderTextColor=\"#293038\" \r\n          value={email}\r\n          onChangeText={(text)=>{setEmail(text)\r\n            setError(null)}}\r\n        />\r\n        </View>\r\n        <View style={styles.inputFields}>\r\n        <MaterialCommunityIcons name=\"key\" size={24} color=\"black\" />         \r\n         <TextInput\r\n          style={styles.TextInput}\r\n          secureTextEntry\r\n          placeholder=\"Password\"\r\n          placeholderTextColor=\"#293038\" \r\n          value={password}\r\n          onChangeText={(text)=>{setPassword(text)\r\n          setError(null)}}\r\n        />\r\n        </View>\r\n        {error==null?null:<Text style={styles.error} >{error}</Text>}\r\n        <Text style={styles.fPass} onPress={() => { navigation.navigate(\"forgetPassword\")}}>Forgot your Password? </Text>\r\n      <TouchableOpacity type=\"submit\" style={styles.SButton}>\r\n      {loading?<View><ActivityIndicator  size=\"small\" color=\"#FfC329\"/></View>:<Text style={styles.ButtonText} onPress={handleSubmit}>Sign In</Text>}\r\n      </TouchableOpacity>\r\n      </View>\r\n      </View>\r\n    );\r\n  }\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: \"white\",\r\n      alignItems: \"center\",\r\n      paddingTop:\"10%\"\r\n    },  \r\n    Heading:{\r\n      textAlign: 'center',\r\n      fontWeight:\"bold\",\r\n      color:\"#293038\",\r\n      fontSize:20,\r\n      fontFamily: 'Roboto'\r\n     },\r\n    form:{\r\n      marginTop:\"20%\",\r\n      justifyContent:\"center\",\r\n      backgroundColor: \"#FfC329\",\r\n      paddingBottom:20,\r\n    borderRadius:10,\r\n    elevation: 20,\r\n    opacity:0.9\r\n    },\r\n    inputFields:{\r\n      borderBottomColor:\"#293038\",\r\n      borderRadius:10,\r\n      borderBottomWidth:1,\r\n      height: 40,\r\n      width:300,\r\n      margin: 12,\r\n      paddingLeft:10,\r\n       flexDirection: 'row',\r\n      alignItems: 'center',\r\n    },\r\n    TextInput:{\r\n      marginLeft:10,\r\n      width:300\r\n    },\r\n    SButton:{\r\n      alignItems: \"center\",\r\n      marginTop:30,\r\n      backgroundColor:\"#293038\",\r\n      width:100,\r\n      height:30,\r\n      borderRadius:6,\r\n      paddingTop:\"1.5%\",\r\n      alignSelf:\"center\"\r\n    \r\n    },\r\n    ButtonText:{\r\n      color: \"#FfC329\",\r\n      fontWeight: \"bold\",\r\n      alignSelf: \"center\",\r\n      textTransform: \"uppercase\"\r\n    },\r\n    image: {\r\n      marginTop:\"20%\",\r\n      width: 200,\r\n      height: 200,\r\n      shadowColor: \"yellow\",\r\n    shadowOffset: { height: 2},\r\n    shadowOpacity: 0.3,\r\n    },\r\n    fPass:{\r\n      color:\"#293038\",\r\n      textAlign:'right',\r\n      fontSize:13,\r\n      fontWeight:\"bold\",\r\n      marginRight:13    \r\n    },\r\n    error:{\r\n      color:\"red\",\r\n      textAlign:'left',\r\n      fontSize:12,\r\n      fontWeight:\"bold\",\r\n      marginLeft:20    \r\n    }\r\n    \r\n  });"]},"metadata":{},"sourceType":"module"}