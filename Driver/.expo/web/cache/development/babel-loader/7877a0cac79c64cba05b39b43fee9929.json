{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\University\\\\FYP\\\\BusX\\\\Student\\\\Screens\\\\ForgetPassword.js\",\n    _this = this;\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Form } from \"react-native-web/dist/index\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer, DrawerActions, NavigationActions } from '@react-navigation/native';\nimport { StudentContext } from \"../ContextApi\";\nimport variable from \"../localhost\";\nvar Stack = createStackNavigator();\nexport function ForgetPassword(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var Sdata = useContext(StudentContext);\n\n  var _useState = useState(Sdata),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      subject = _useState4[0],\n      setSubject = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      desc = _useState6[0],\n      setDesc = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalVisible = _useState8[0],\n      setModalVisible = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      modalText = _useState10[0],\n      setModalText = _useState10[1];\n\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerTitleAlign: \"center\"\n    },\n    initialRouteName: \"Enter Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      headerStyle: {\n        backgroundColor: '#FfC329',\n        elevation: 0\n      }\n    },\n    name: \"Enter Email\",\n    component: EmailScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar EmailScreen = function EmailScreen() {\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      email = _useState12[0],\n      setEmail = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      message = _useState14[0],\n      setMessage = _useState14[1];\n\n  var handlePress = function handlePress() {\n    fetch(\"http://\" + variable.localhost + \":5000/student/sendEmail\", {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email\n      })\n    }).then(function (response) {\n      return response.json();\n    }).catch(function (error) {\n      return console.error(\"ErrorHere: \", error);\n    }).then(function (response) {\n      if (response.message) {\n        setMessage(response.message);\n      }\n\n      if (response.error) {\n        consol.log(response.error);\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.form,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.inputFields],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: [styles.TextInput, {\n      textAlignVertical: 'top',\n      marginTop: 10\n    }],\n    placeholder: \"Enter email for verifictaion\",\n    placeholderTextColor: \"#293038\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }\n  })), React.createElement(TouchableOpacity, {\n    type: \"submit\",\n    style: styles.SButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.ButtonText,\n    onPress: handlePress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Send Verification Code\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    paddingTop: \"30%\"\n  },\n  text: {\n    textAlign: 'center',\n    color: \"black\",\n    fontSize: 30\n  },\n  form: {\n    marginTop: \"10%\",\n    justifyContent: \"center\",\n    backgroundColor: \"#FfC329\",\n    paddingBottom: 20,\n    borderRadius: 10,\n    elevation: 20,\n    opacity: 0.9\n  },\n  Heading: {\n    textAlign: 'center',\n    fontWeight: \"bold\",\n    color: \"#293038\",\n    fontSize: 24,\n    fontFamily: 'Roboto'\n  },\n  modalView: {\n    width: \"95%\",\n    alignSelf: \"center\",\n    marginTop: \"80%\",\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: \"#FfC329\",\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#FfC329\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  SButton: {\n    alignItems: \"center\",\n    alignSelf: \"center\",\n    marginTop: 10,\n    backgroundColor: \"#293038\",\n    width: 200,\n    height: 30,\n    borderRadius: 6,\n    paddingTop: \"1.5%\"\n  },\n  ButtonText: {\n    color: \"#FfC329\",\n    fontWeight: \"bold\",\n    alignSelf: \"center\",\n    textTransform: \"uppercase\"\n  },\n  modalText: {\n    textAlign: 'center',\n    color: \"#293038\",\n    fontSize: 20\n  },\n  inputFields: {\n    borderColor: \"#293038\",\n    borderRadius: 10,\n    borderWidth: 1,\n    height: 40,\n    width: 300,\n    margin: 12,\n    paddingLeft: 10,\n    flexDirection: 'row',\n    justifyContent: \"center\"\n  },\n  TextInput: {\n    marginLeft: 10,\n    width: 300\n  }\n});","map":{"version":3,"sources":["D:/University/FYP/BusX/Student/Screens/ForgetPassword.js"],"names":["React","useState","useEffect","useContext","Form","MaterialIcons","MaterialCommunityIcons","createStackNavigator","NavigationContainer","DrawerActions","NavigationActions","StudentContext","variable","Stack","ForgetPassword","navigation","route","Sdata","data","setData","subject","setSubject","desc","setDesc","modalVisible","setModalVisible","modalText","setModalText","headerTitleAlign","headerStyle","backgroundColor","elevation","EmailScreen","email","setEmail","message","setMessage","handlePress","fetch","localhost","method","headers","Accept","body","JSON","stringify","then","response","json","catch","error","console","consol","log","styles","container","form","inputFields","TextInput","textAlignVertical","marginTop","text","SButton","ButtonText","StyleSheet","create","flex","alignItems","paddingTop","textAlign","color","fontSize","justifyContent","paddingBottom","borderRadius","opacity","Heading","fontWeight","fontFamily","modalView","width","alignSelf","borderWidth","borderColor","padding","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","textTransform","margin","paddingLeft","flexDirection","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect ,useContext} from \"react\";\r\nimport { StyleSheet, Text, View,Button,FlatList ,ActivityIndicator,Form,TextInput,TouchableOpacity,Image,Modal} from 'react-native';\r\nimport { MaterialIcons,MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer,DrawerActions,NavigationActions } from '@react-navigation/native';\r\nimport{StudentContext} from \"../ContextApi\";\r\nimport variable from \"../localhost\";\r\n\r\nconst Stack = createStackNavigator();\r\n//Navigator COmponent\r\nexport function ForgetPassword({ navigation,route }) {\r\nconst Sdata=useContext(StudentContext);\r\nconst[data,setData]=useState(Sdata);\r\nconst [subject,setSubject]=useState(\"\");\r\nconst [desc,setDesc]=useState(\"\");\r\nconst [modalVisible, setModalVisible] = useState(false);\r\nconst [modalText, setModalText] = useState();\r\n\r\n\r\n    return (\r\n      <Stack.Navigator  \r\n      screenOptions={{ \r\n        headerTitleAlign:\"center\",\r\n       }}\r\n      initialRouteName=\"Enter Email\">\r\n        <Stack.Screen  options={{   \r\n      headerStyle: {\r\n        backgroundColor: '#FfC329',elevation:0\r\n      }\r\n      }} name=\"Enter Email\" component={EmailScreen} />\r\n      </Stack.Navigator>\r\n    );\r\n    \r\n  }\r\n\r\n//First Screen\r\n  const EmailScreen=()=>{\r\n    const [email,setEmail]=useState(\"\");\r\n    const[message,setMessage]=useState(\"\");\r\n\r\n    //handler\r\n    const handlePress=()=>{\r\n      fetch(`http://${variable.localhost}:5000/student/sendEmail`, {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body:JSON.stringify({email:email})\r\n      })\r\n      .then(response => response.json())  \r\n      .catch(error=> console.error(\"ErrorHere: \",error))\r\n      .then(response=>{\r\n          if(response.message){\r\n              setMessage(response.message);\r\n          }\r\n          if(response.error){\r\n             consol.log(response.error);\r\n          }\r\n      });\r\n    }\r\n        \r\n\r\n\r\n    return(\r\n        <View  style={styles.container}>\r\n        <View style={styles.form}>\r\n        \r\n        <View style={[styles.inputFields]}>         \r\n         <TextInput\r\n          style={[styles.TextInput,{textAlignVertical: 'top',marginTop:10}]}\r\n          placeholder=\"Enter email for verifictaion\"\r\n          placeholderTextColor=\"#293038\" \r\n          value={email}\r\n          onChangeText={(text)=>{setEmail(text)\r\n          }}\r\n        />\r\n        </View>\r\n        <TouchableOpacity type=\"submit\" style={styles.SButton}>\r\n      <Text style={styles.ButtonText} onPress={handlePress}>Send Verification Code</Text>\r\n      </TouchableOpacity>\r\n        </View>\r\n        \r\n      \r\n      </View>\r\n    )\r\n    \r\n    };\r\n\r\n  const styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      paddingTop:\"30%\"\r\n    }, \r\n    text:{\r\n      textAlign: 'center',\r\n      color:\"black\",\r\n      fontSize:30\r\n    },\r\n    form:{\r\n      marginTop:\"10%\",\r\n      justifyContent:\"center\",\r\n      backgroundColor: \"#FfC329\",\r\n      paddingBottom:20,\r\n    borderRadius:10,\r\n    elevation: 20,\r\n    opacity:0.9\r\n    },\r\n    Heading:{\r\n      textAlign: 'center',\r\n      fontWeight:\"bold\",\r\n      color:\"#293038\",\r\n      fontSize:24,\r\n      fontFamily: 'Roboto'\r\n     },\r\n     modalView: {\r\n      width:\"95%\",\r\n      alignSelf:\"center\",\r\n      marginTop: \"80%\",\r\n      backgroundColor: \"white\",\r\n      borderRadius: 20,\r\n      borderWidth:1,\r\n      borderColor:\"#FfC329\",\r\n      padding: 35,\r\n      alignItems: \"center\",\r\n      shadowColor: \"#FfC329\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 4,\r\n      elevation: 5\r\n    },\r\n    SButton:{\r\n      alignItems: \"center\",\r\n      alignSelf:\"center\",\r\n      marginTop:10,\r\n      backgroundColor:\"#293038\",\r\n      width:200,\r\n      height:30,\r\n      borderRadius:6,\r\n      paddingTop:\"1.5%\",\r\n    \r\n    },\r\n    ButtonText:{\r\n      color: \"#FfC329\",\r\n      fontWeight: \"bold\",\r\n      alignSelf: \"center\",\r\n      textTransform: \"uppercase\"\r\n    },\r\n    modalText:{\r\n      textAlign: 'center',\r\n    color:\"#293038\",\r\n    fontSize:20\r\n    },\r\n    inputFields:{\r\n      borderColor:\"#293038\",\r\n      borderRadius:10,\r\n      borderWidth:1,\r\n      height: 40,\r\n      width:300,\r\n      margin: 12,\r\n      paddingLeft:10,\r\n      flexDirection: 'row',\r\n      justifyContent:\"center\",\r\n      \r\n    },\r\n    TextInput:{\r\n      marginLeft:10,\r\n      width:300,\r\n      \r\n    },\r\n    \r\n  });"]},"metadata":{},"sourceType":"module"}